<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Opportunities - HandInHand</title>
    <link rel="stylesheet" href="poststyle.css">
    {{!-- <link rel="stylesheet" href="style.css"> --}}
</head>
<body>
    <header>
        <img src="https://i.imgur.com/MoSHBZX.png" class="logo" alt="HandinHand">
        <ul class="navbar">
            <li><a href="#">Home</a></li>
            <li><a href="#">About</a></li>
            <li><a href="/Posts">Opportunities</a></li>
            <li><a href="{{#if profileLink}}{{ profileLink }}{{else}}/signup{{/if}}">Profile</a></li>
        </ul>
        <div class="h-right">
            {{#if signedIn}}
            <a href="/logout">Logout</a>
            {{else}}
            <li><a href="/signup">Register</a>|<a href="/login">Login</a></li>
            {{/if}}
            <div class="bx bx-menu" id="menu-icon"></div>
        </div>
    </header>

    <div class="search-bar">
    <input type="text" class="search-input" placeholder="Search..." id="searchInput">
        <button class="search-button">Search</button>
     {{#if signedIn}}
    {{#if isOrganization }}
        <a href="/job_submission_form" class="post-button">Post an Opportunity</a>
    {{/if}}
{{/if}}
    </div>

    <div class="container">
        <aside class="sidebar">
            <h2>Filter By</h2>
            <div class="filter-category">
                <h3>Popular Filters</h3>
                <ul>
                    <li><input type="checkbox" id="Reemo"> <label for="Reemo">Reemo</label></li>
                    <li><input type="checkbox" id="Ramroumi"> <label for="Ramroumi">ramroum</label></li>
                    <li><input type="checkbox" id="Ramroum"> <label for="Ramroum">ramroumi</label></li>
                </ul>
            </div>
        </aside>

        <main class="main-content">
            <section class="opportunities-page">
                <div class="opportunities-container" id="opportunitiesContainer">
                </div>
            </section>
        </main>
    </div>









{{!-- seperate scripts later --}}
    <script>
    const header = document.querySelector("header");

window.addEventListener("scroll", function(){
    header.classList.toggle("sticky", window.scrollY > 60)
});

let menu = document.querySelector('#menu-icon');
let navbar = document.querySelector('.navbar');

menu.onclick = () => {
    menu.classList.toggle('bx-x');
    navbar.classList.toggle('open');
};
    </script>

    <script>
       const addOpportunity = (title, description, seatsAvailable) => {
            const opportunitiesContainer = document.getElementById("opportunitiesContainer");

            const opportunityCard = document.createElement("div");
            opportunityCard.classList.add("opportunity-card");

            const titleElement = document.createElement("h3");
            titleElement.textContent = title;

            const descriptionElement = document.createElement("p");
            descriptionElement.textContent = description;

            const seatsLeftElement = document.createElement("span");
            seatsLeftElement.classList.add("seats-left");
            seatsLeftElement.textContent = `Seats Left: ${seatsAvailable}`;

            const bookButton = document.createElement("button");
            bookButton.classList.add("book-button");
            bookButton.textContent = "Book Now";

            opportunityCard.appendChild(titleElement);
            opportunityCard.appendChild(descriptionElement);
            opportunityCard.appendChild(seatsLeftElement);
            opportunityCard.appendChild(bookButton);

            opportunitiesContainer.appendChild(opportunityCard);
        };

       const populateOpportunities = () => {
            const jobs = JSON.parse(localStorage.getItem("jobs")) || [];
            console.log("Number of jobs retrieved:", jobs.length);
            jobs.forEach(job => {
                console.log("Adding opportunity for job:", job.title);
                addOpportunity(job.title, job.details, job.openPositions);
            });
        };

     //   localStorage.clear();

        document.addEventListener("DOMContentLoaded", populateOpportunities);
    </script>
    <script>
        const searchInput = document.getElementById("searchInput");

    searchInput.addEventListener("input", function() {
    const searchText = searchInput.value.toLowerCase();
    const opportunityCards = document.querySelectorAll(".opportunity-card");

    opportunityCards.forEach(card => {
        const title = card.querySelector("h3").textContent.toLowerCase();
        const description = card.querySelector("p").textContent.toLowerCase();

        if (title.includes(searchText) || description.includes(searchText)) {
            card.style.display = "block";
        } else {
            card.style.display = "none";
        }
    });
});

    </script>
</body>
</html>
