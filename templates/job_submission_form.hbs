<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Submission Form</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Rubik:wght@400;700&display=swap" rel="stylesheet"/>
    <link rel="stylesheet" href="job_form_style.css"/>  
</head>
<body>
    <h1>Job Submission Form</h1>
    <form id="jobForm" class="job-form">
        <h3>Submit a Job</h3>
        <label for="job_name">Job Name:</label><br>
        <input type="text" id="job_name" name="job_name"><br>
        <label for="description">Description:</label><br>
        <textarea id="description" name="description"></textarea><br>
        <label for="open_positions">Open Positions:</label><br>
        <input type="number" id="open_positions" name="open_positions"><br>
        <label for="location">Location:</label><br>
        <input type="text" id="location" name="location" required><br>
        <label for="required_hours">Required Hours:</label><br>
        <input type="number" id="required_hours" name="required_hours" required><br>
        <label for="required_skills">Required Skills:</label><br>
        <input type="text" id="required_skills" name="required_skills" required><br>
        <label for="image_link">Image Link:</label><br>
        <input type="url" id="image_link" name="image_link"><br>
        <input type="submit" value="Submit">
    </form>

    <!-- Container to hold the dynamically added job opportunities -->
    <section class="opportunities-page">
        <div class="opportunities-container" id="opportunitiesContainer">
            <!-- Opportunities will be dynamically added here -->
        </div>
    </section>

    <script>
        // Function to add a new job opportunity to the opportunities section
        const addOpportunity = (job) => {
            const opportunitiesContainer = document.getElementById("opportunitiesContainer");

            const opportunityCard = document.createElement("div");
            opportunityCard.classList.add("opportunity-card");

            const titleElement = document.createElement("h3");
            titleElement.textContent = job.title;

            const descriptionElement = document.createElement("p");
            descriptionElement.textContent = job.details;

            const seatsLeftElement = document.createElement("span");
            seatsLeftElement.classList.add("seats-left");
            seatsLeftElement.textContent = `Seats Left: ${job.openPositions}`;

            const bookButton = document.createElement("button");
            bookButton.classList.add("book-button");
            bookButton.textContent = "Book Now";

            opportunityCard.appendChild(titleElement);
            opportunityCard.appendChild(descriptionElement);
            opportunityCard.appendChild(seatsLeftElement);
            opportunityCard.appendChild(bookButton);

            opportunitiesContainer.appendChild(opportunityCard);
        };

        // Function to handle job submission
       // Function to handle job submission
const submitJob = (event) => {
    event.preventDefault();

    // Retrieve existing jobs from local storage or initialize an empty array
    let jobs = JSON.parse(localStorage.getItem("jobs")) || [];

    const jobName = document.getElementById("job_name").value;
    const description = document.getElementById("description").value;
    const openPositions = parseInt(document.getElementById("open_positions").value);
    const location = document.getElementById("location").value;
    const requiredHours = document.getElementById("required_hours").value;
    const requiredSkills = document.getElementById("required_skills").value;
    let imageLink = document.getElementById("image_link").value;

    if (!imageLink) {
        imageLink = "https://i.imgur.com/MoSHBZX.png";
    }

    if (jobName && description && !isNaN(openPositions) && openPositions > 0 && location && requiredHours && requiredSkills) {
        const newJob = {
            title: jobName,
            image: imageLink,
            details: description,
            openPositions: openPositions,
            location: location,
            requiredHours: requiredHours,
            requiredSkills: requiredSkills,
            link: "#",
        };

        // Add the new job to the existing array of jobs
        jobs.push(newJob);

        // Save the updated jobs array back to local storage
        localStorage.setItem("jobs", JSON.stringify(jobs));

        // Reset the form
        document.getElementById("jobForm").reset();

        // Refresh the opportunities after adding the new job
        populateOpportunities();
    } else {
        alert("Please fill in all fields correctly.");
    }
};

        // Event listener for form submission
        document.getElementById("jobForm").addEventListener("submit", submitJob);
    </script>
</body>
</html>
